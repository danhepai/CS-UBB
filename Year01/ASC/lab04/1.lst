     1                                  bits 32 
     2                                  
     3                                  global start        
     4                                  
     5                                  
     6                                  extern exit, printf              
     7                                  import exit msvcrt.dll   
     8                                  import printf msvcrt.dll
     9                                  
    10                                  ;   Se dau cuvantul A si octetul B. Sa se obtina dublucuvatul C:
    11                                  ;   bitii 0-3 ai lui C au valoarea 1
    12                                  ;   bitii 4-7 ai lui C coincid cu bitii 0-3 ai lui A
    13                                  ;   bitii 8-13 ai lui C au valoarea 0
    14                                  ;   bitii 14-23 ai lui C coincid cu bitii 4-13 ai lui A
    15                                  ;   bitii 24-29 ai lui C coincid cu bitii 2-7 ai lui B
    16                                  ;   bitii 30-31 au valoarea 1
    17                                  
    18                                  segment data use32 class=data
    19 00000000 4101                        a dw 321
    20 00000002 15                          b db 21
    21 00000003 FFFFFFFF                    c dd 0xFFFFFFFF
    22 00000007 257800                      format db "%x", 0
    23 0000000A 00000000                    rez dd 0
    24                                  
    25                                  
    26                                  segment code use32 class=code
    27                                      start:
    28                                          ; 0 - 3
    29 00000000 BB0F000000                      mov ebx, 0x0000000F
    30 00000005 091D[0A000000]                  or [rez], ebx
    31                                          
    32                                          ; 4 - 7
    33 0000000B 66A1[00000000]                  mov ax, [a]
    34 00000011 66BB0F00                        mov bx, 0x000F
    35 00000015 6621D8                          and ax, bx
    36 00000018 0FB7C0                          movzx eax, ax
    37 0000001B C1E004                          shl eax, 4
    38 0000001E 0905[0A000000]                  or [rez], eax
    39                                          
    40                                          ; 8 - 13
    41 00000024 66B8FFC0                        mov ax, 1100_0000_1111_1111b
    42 00000028 0FB7C0                          movzx eax, ax
    43 0000002B 2105[0A000000]                  and [rez], eax
    44                                          
    45                                          ; 14 - 23
    46 00000031 66A1[00000000]                  mov ax, [a]
    47 00000037 66BBF03F                        mov bx, 0011_1111_1111_0000b
    48 0000003B 6621D8                          and ax, bx
    49 0000003E 0FB7C0                          movzx eax, ax
    50 00000041 C1E00A                          shl eax, 10
    51 00000044 0905[0A000000]                  or [rez], eax
    52                                          
    53                                          ; 24 - 29
    54 0000004A A0[02000000]                    mov al, [b]
    55 0000004F B37C                            mov bl, 0111_1100b
    56 00000051 20D8                            and al, bl
    57 00000053 0FB6C0                          movzx eax, al
    58 00000056 C1E016                          shl eax, 22
    59 00000059 0905[0A000000]                  or [rez], eax
    60                                          
    61                                          ; 30 - 31
    62 0000005F B8000000C0                      mov eax, 0xC0000000
    63 00000064 0905[0A000000]                  or [rez], eax
    64                                          
    65                                          
    66                                          
    67                                          ; PRINT TO CHECK
    68 0000006A FF35[0A000000]                  push dword [rez]
    69                                          ;push eax
    70 00000070 68[07000000]                    push dword format
    71 00000075 FF15[00000000]                  call [printf]
    72 0000007B 83C408                          add esp, 4 * 2
    73                                          
    74                                      
    75                                          
    76 0000007E 6A00                            push    dword 0      
    77 00000080 FF15[00000000]                  call    [exit]       
