     1                                  bits 32
     2                                  
     3                                  global start        
     4                                  
     5                                  extern exit, scanf, printf           
     6                                  import exit msvcrt.dll
     7                                  import scanf msvcrt.dll
     8                                  import printf msvcrt.dll
     9                                  
    10                                  segment data use32 class=data
    11 00000000 256400                      formatDecimal db "%d", 0
    12 00000003 257800                      formatHexa db "%x", 0
    13 00000006 <res 00000004>              num resd 1
    14 0000000A 20726573743A2000            restl db " rest: ", 0
    15 00000012 0000                        restul dw 0
    16                                      
    17                                  segment code use32 class=code
    18                                      start:
    19 00000000 BB00000000                      mov ebx, 0
    20                                          ; NUM 1
    21 00000005 68[06000000]                    push dword num
    22 0000000A 68[00000000]                    push dword formatDecimal
    23 0000000F FF15[00000000]                  call [scanf]
    24 00000015 83C408                          add esp, 4 * 2
    25                                          
    26 00000018 031D[06000000]                  add ebx, [num]
    27                                          
    28                                          ; NUM 2
    29 0000001E 68[06000000]                    push dword num
    30 00000023 68[00000000]                    push dword formatDecimal
    31 00000028 FF15[00000000]                  call [scanf]
    32 0000002E 83C408                          add esp, 4 * 2
    33                                          
    34 00000031 031D[06000000]                  add ebx, [num]
    35                                          
    36                                          ; NUM 3 
    37 00000037 68[06000000]                    push dword num
    38 0000003C 68[00000000]                    push dword formatDecimal
    39 00000041 FF15[00000000]                  call [scanf]
    40 00000047 83C408                          add esp, 4 * 2
    41                                          
    42 0000004A 031D[06000000]                  add ebx, [num]
    43                                          
    44                                          ; IN EAX E SUMA LOR -> o schimb in DX:AX
    45 00000050 53                              push ebx
    46 00000051 6658                            pop ax
    47 00000053 665A                            pop dx
    48                                          
    49                                          ; IN BX PUN 3 -> IMPART DX:AX LA BX
    50 00000055 66BB0300                        mov bx, 3
    51                                          
    52                                          ; IMPART -> CAT IN AX, REST IN DX
    53 00000059 66F7FB                          idiv bx
    54                                          
    55 0000005C 668915[12000000]                mov [restul], dx
    56                                          
    57 00000063 98                              cwde ; CONVERT AX TO EAX
    58 00000064 50                              push eax
    59 00000065 68[03000000]                    push formatHexa
    60 0000006A FF15[00000000]                  call [printf]
    61 00000070 83C408                          add esp, 4 * 2
    62                                          
    63 00000073 68[0A000000]                    push restl
    64 00000078 FF15[00000000]                  call [printf]
    65 0000007E 83C404                          add esp, 4
    66                                          
    67 00000081 66A1[12000000]                  mov ax, [restul]
    68 00000087 98                              cwde
    69                                          
    70 00000088 50                              push eax
    71 00000089 68[03000000]                    push formatHexa
    72 0000008E FF15[00000000]                  call [printf]
    73 00000094 83C408                          add esp, 4 * 2
    74                                          
    75 00000097 6A00                            push    dword 0      
    76 00000099 FF15[00000000]                  call    [exit]
